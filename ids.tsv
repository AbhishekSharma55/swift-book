Stable ID	Sphinx	DocC
ID0	GuidedTour/AboutSwift	
ID1	GuidedTour/GuidedTour	
ID2	GuidedTour/GuidedTourPart	
ID3	LanguageGuide/AccessControl	
ID4	accesscontrol-modulesandsourcefiles	
ID5	accesscontrol-accesslevels	
ID6	accesscontrol-guidingprincipleofaccesslevels	
ID7	accesscontrol-defaultaccesslevels	
ID8	accesscontrol-accesslevelsforsingletargetapps	
ID9	accesscontrol-accesslevelsforframeworks	
ID10	accesscontrol-accesscontrolsyntax	
ID11	accesscontrol-customtypes	
ID12	accesscontrol-tupletypes	
ID13	accesscontrol-functiontypes	
ID14	accesscontrol-enumerationtypes	
ID15	accesscontrol-nestedtypes	
ID16	accesscontrol-subclassing	
ID17	accesscontrol-constantsvariablespropertiesandsubscripts	
ID18	accesscontrol-gettersandsetters	
ID19	accesscontrol-initializers	
ID20	accesscontrol-defaultinitializers	
ID21	accesscontrol-defaultmemberwiseinitializersforstructuretypes	
ID22	accesscontrol-protocols	
ID23	accesscontrol-protocolinheritance	
ID24	accesscontrol-protocolconformance	
ID25	accesscontrol-extensions	
ID26	accesscontrol-generics	
ID27	accesscontrol-typealiases	
ID28	LanguageGuide/AdvancedOperators	
ID29	advancedoperators-bitwiseoperators	
ID30	advancedoperators-bitwisenotoperator	
ID31	advancedoperators-bitwiseandoperator	
ID32	advancedoperators-bitwiseoroperator	
ID33	advancedoperators-bitwisexoroperator	
ID34	advancedoperators-bitwiseleftandrightshiftoperators	
ID35	advancedoperators-shiftingbehaviorforunsignedintegers	
ID36	advancedoperators-shiftingbehaviorforsignedintegers	
ID37	advancedoperators-overflowoperators	
ID38	advancedoperators-valueoverflow	
ID40	advancedoperators-divisionbyzero	
ID41	advancedoperators-precedenceandassociativity	
ID42	advancedoperators-operatorfunctions	
ID43	advancedoperators-prefixandpostfixoperators	
ID44	advancedoperators-compoundassignmentoperators	
ID45	advancedoperators-equivalenceoperators	
ID46	advancedoperators-customoperators	
ID47	advancedoperators-precedenceandassociativityforcustomoperators	
ID48	LanguageGuide/AutomaticReferenceCounting	
ID49	automaticreferencecounting-howarcworks	
ID50	automaticreferencecounting-arcinaction	
ID51	automaticreferencecounting-strongreferencecyclesbetweenclassinstances	
ID52	automaticreferencecounting-resolvingstrongreferencecyclesbetweenclassinstances	
ID53	automaticreferencecounting-weakreferencesbetweenclassinstances	
ID54	automaticreferencecounting-unownedreferencesbetweenclassinstances	
ID55	automaticreferencecounting-unownedreferencesandimplicitlyunwrappedoptionalproperties	
ID56	automaticreferencecounting-strongreferencecyclesforclosures	
ID57	automaticreferencecounting-resolvingstrongreferencecyclesforclosures	
ID58	automaticreferencecounting-definingacapturelist	
ID59	automaticreferencecounting-weakandunownedreferencesforclosures	
ID60	LanguageGuide/BasicOperators	
ID61	basicoperators-terminology	
ID62	basicoperators-assignmentoperator	
ID63	basicoperators-arithmeticoperators	
ID64	basicoperators-remainderoperator	
ID65	basicoperators-floatingpointremaindercalculations	
ID66	basicoperators-incrementanddecrementoperators	
ID67	basicoperators-unaryminusoperator	
ID68	basicoperators-unaryplusoperator	
ID69	basicoperators-compoundassignmentoperators	
ID70	basicoperators-comparisonoperators	
ID71	basicoperators-ternaryconditionaloperator	
ID72	basicoperators-nilcoalescingoperator	
ID73	basicoperators-rangeoperators	
ID74	basicoperators-closedrangeoperator	
ID75	basicoperators-halfclosedrangeoperator	
ID76	basicoperators-logicaloperators	
ID77	basicoperators-logicalnotoperator	
ID78	basicoperators-logicalandoperator	
ID79	basicoperators-logicaloroperator	
ID80	basicoperators-combininglogicaloperators	
ID81	basicoperators-explicit-parentheses	
ID82	LanguageGuide/ClassesAndStructures	
ID83	classesandstructures-comparingclassesandstructures	
ID84	classesandstructures-definitionsyntax	
ID85	classesandstructures-classandstructureinstances	
ID86	classesandstructures-accessingproperties	
ID87	classesandstructures-memberwiseinitializersforstructuretypes	
ID88	classesandstructures-structuresandenumerationsarevaluetypes	
ID89	classesandstructures-classesarereferencetypes	
ID90	classesandstructures-identityoperators	
ID91	classesandstructures-pointers	
ID92	classesandstructures-choosingbetweenclassesandstructures	
ID93	classesandstructures-assignmentandcopybehaviorforstringsarraysanddictionaries	
ID94	LanguageGuide/Closures	
ID95	closures-closureexpressions	
ID96	closures-thesortedfunction	
ID97	closures-closureexpressionsyntax	
ID98	closures-inferringtypefromcontext	
ID99	closures-implicitreturnsfromsingleexpressionclosures	
ID100	closures-shorthandargumentnames	
ID101	closures-operatorfunctions	
ID102	closures-trailingclosures	
ID103	closures-capturingvalues	
ID104	closures-closuresarereferencetypes	
ID105	LanguageGuide/CollectionTypes	
ID106	collectiontypes-mutabilityofcollections	
ID107	collectiontypes-arrays	
ID108	collectiontypes-arraytypeshorthandsyntax	
ID109	collectiontypes-arrayliterals	
ID110	collectiontypes-accessingandmodifyinganarray	
ID111	collectiontypes-iteratingoveranarray	
ID112	collectiontypes-creatingandinitializinganarray	
ID113	collectiontypes-dictionaries	
ID114	collectiontypes-dictionarytypeshorthandsyntax	
ID115	collectiontypes-dictionaryliterals	
ID116	collectiontypes-accessingandmodifyingadictionary	
ID117	collectiontypes-iteratingoveradictionary	
ID118	collectiontypes-creatinganemptydictionary	
ID119	collectiontypes-hashvaluesfordictionarykeytypes	
ID120	LanguageGuide/ControlFlow	
ID121	controlflow-forloops	
ID122	controlflow-forin	
ID123	controlflow-forconditionincrement	
ID124	controlflow-whileloops	
ID125	controlflow-while	
ID126	controlflow-dowhile	
ID127	controlflow-conditionalstatements	
ID128	controlflow-if	
ID129	controlflow-switch	
ID130	controlflow-noimplicitfallthrough	
ID131	controlflow-rangematching	
ID132	controlflow-tuples	
ID133	controlflow-valuebindings	
ID134	controlflow-where	
ID135	controlflow-controltransferstatements	
ID136	controlflow-continue	
ID137	controlflow-break	
ID138	controlflow-breakinaloop	
ID139	controlflow-breakinaswitchstatement	
ID140	controlflow-fallthrough	
ID141	controlflow-labeledstatements	
ID142	LanguageGuide/Deinitialization	
ID143	deinitialization-howdeinitializationworks	
ID144	deinitialization-deinitializersinaction	
ID145	LanguageGuide/Enumerations	
ID146	enumerations-enumerationsyntax	
ID147	enumerations-matchingenumerationvalueswithaswitchstatement	
ID148	enumerations-associatedvalues	
ID149	enumerations-rawvalues	
ID150	enumerations-initializingfromarawvalue	
ID151	LanguageGuide/Extensions	
ID152	extensions-computedproperties	
ID153	extensions-initializers	
ID154	extensions-methods	
ID155	extensions-mutatinginstancemethods	
ID156	extensions-subscripts	
ID157	extensions-nestedtypes	
ID158	LanguageGuide/Functions	
ID159	functions-definingandcallingfunctions	
ID160	functions-functionparametersandreturnvalues	
ID162	functions-functionswithoutparameters	
ID163	functions-functionswithoutreturnvalues	
ID164	functions-functionswithmultiplereturnvalues	
ID165	functions-optionaltuplereturntypes	
ID166	functions-functionparameternames	
ID167	functions-externalparameternames	
ID168	functions-shorthandexternalparameternames	
ID169	functions-defaultparametervalues	
ID170	functions-externalnamesforparameterswithdefaultvalues	
ID171	functions-variadicparameters	
ID172	functions-constantandvariableparameters	
ID173	functions-inoutparameters	
ID174	functions-functiontypes	
ID175	functions-usingfunctiontypes	
ID176	functions-functiontypesasparametertypes	
ID177	functions-functiontypesasreturntypes	
ID178	functions-nestedfunctions	
ID179	LanguageGuide/Generics	
ID180	generics-theproblemthatgenericssolve	
ID181	generics-genericfunctions	
ID182	generics-typeparameters	
ID183	generics-namingtypeparameters	
ID184	generics-generictypes	
ID185	generics-extendingagenerictype	
ID186	generics-typeconstraints	
ID187	generics-typeconstraintsyntax	
ID188	generics-typeconstraintsinaction	
ID189	generics-associatedtypes	
ID190	generics-associatedtypesinaction	
ID191	generics-extendinganexistingtypetospecifyanassociatedtype	
ID192	generics-whereclauses	
ID193	LanguageGuide/Inheritance	
ID194	inheritance-definingabaseclass	
ID195	inheritance-subclassing	
ID196	inheritance-overriding	
ID197	inheritance-accessingsuperclass	
ID198	inheritance-overridingmethods	
ID199	inheritance-overridingproperties	
ID200	inheritance-overridingpropertygettersandsetters	
ID201	inheritance-overridingpropertyobservers	
ID202	inheritance-preventingoverrides	
ID203	LanguageGuide/Initialization	
ID204	initialization-settinginitialvaluesforstoredproperties	
ID205	initialization-initializers	
ID206	initialization-defaultpropertyvalues	
ID207	initialization-customizinginitialization	
ID208	initialization-initializationparameters	
ID209	initialization-localandexternalnames	
ID210	initialization-initializerparameterswithoutexternalnames	
ID211	initialization-optionalpropertytypes	
ID212	initialization-modifyingconstantpropertiesduringinitialization	
ID213	initialization-defaultinitializers	
ID214	initialization-memberwiseinitializersforstructuretypes	
ID215	initialization-initializerdelegationforvaluetypes	
ID216	initialization-classinheritanceandinitialization	
ID217	initialization-designatedinitializersandconvenienceinitializers	
ID218	initialization-syntaxfordesignatedandconvenienceinitializers	
ID219	initialization-initializerchaining	
ID220	initialization-twophaseinitialization	
ID221	initialization-initializerinheritanceandoverriding	
ID222	initialization-automaticinitializerinheritance	
ID223	initialization-designatedandconvenienceinitializersinaction	
ID224	initialization-failableinitializers	
ID225	initialization-failableinitializersforenumerations	
ID226	initialization-failableinitializersforenumerationswithrawvalues	
ID228	initialization-propagationofinitializationfailure	
ID229	initialization-overridingafailableinitializer	
ID230	initialization-implicitlyunwrappedfailableinitializers	
ID231	initialization-requiredinitializers	
ID232	initialization-settingadefaultpropertyvaluewithaclosureorfunction	
ID233	LanguageGuide/LanguageGuidePart	
ID234	LanguageGuide/Methods	
ID235	methods-instancemethods	
ID236	methods-localandexternalnamesformethods	
ID238	methods-theselfproperty	
ID239	methods-modifyingvaluetypesfromwithininstancemethods	
ID240	methods-assigningtoselfwithinamutatingmethod	
ID241	methods-typemethods	
ID242	LanguageGuide/NestedTypes	
ID243	nestedtypes-nestedtypesinaction	
ID244	nestedtypes-referringtonestedtypes	
ID245	LanguageGuide/OptionalChaining	
ID246	optionalchaining-optionalchainingasanalternativetoforcedunwrapping	
ID247	optionalchaining-definingmodelclassesforoptionalchaining	
ID248	optionalchaining-callingpropertiesthroughoptionalchaining	
ID249	optionalchaining-callingmethodsthroughoptionalchaining	
ID250	optionalchaining-callingsubscriptsthroughoptionalchaining	
ID251	optionalchaining-accessingsubscriptsofoptionaltype	
ID252	optionalchaining-linkingmultiplelevelsofchaining	
ID253	optionalchaining-chainingonmethodswithoptionalreturnvalues	
ID254	LanguageGuide/Properties	
ID255	properties-storedproperties	
ID256	properties-storedpropertiesofconstantstructureinstances	
ID257	properties-lazystoredproperties	
ID258	properties-storedpropertiesandinstancevariables	
ID259	properties-computedproperties	
ID260	properties-shorthandsetterdeclaration	
ID261	properties-readonlycomputedproperties	
ID262	properties-propertyobservers	
ID263	properties-globalandlocalvariables	
ID264	properties-typeproperties	
ID265	properties-typepropertysyntax	
ID266	properties-queryingandsettingtypeproperties	
ID267	LanguageGuide/Protocols	
ID268	protocols-protocolsyntax	
ID269	protocols-propertyrequirements	
ID270	protocols-methodrequirements	
ID271	protocols-mutatingmethodrequirements	
ID272	protocols-initializerrequirements	
ID273	protocols-classimplementationsofprotocolinitializerrequirements	
ID274	protocols-failableinitializerrequirements	
ID275	protocols-protocolsastypes	
ID276	protocols-delegation	
ID277	protocols-addingprotocolconformancewithanextension	
ID278	protocols-declaringprotocoladoptionwithanextension	
ID279	protocols-collectionsofprotocoltypes	
ID280	protocols-protocolinheritance	
ID281	protocols-classonlyprotocols	
ID282	protocols-protocolcomposition	
ID283	protocols-checkingforprotocolconformance	
ID284	protocols-optionalprotocolrequirements	
ID285	LanguageGuide/StringsAndCharacters	
ID286	stringsandcharacters-literals	
ID287	stringsandcharacters-initializinganemptystring	
ID288	stringsandcharacters-stringmutability	
ID289	stringsandcharacters-stringsarevaluetypes	
ID290	stringsandcharacters-workingwithcharacters	
ID291	stringsandcharacters-concatenatingstringsandcharacters	
ID292	stringsandcharacters-stringinterpolation	
ID293	stringsandcharacters-unicode	
ID294	stringsandcharacters-stringsareunicodescalars	
ID295	stringsandcharacters-specialcharactersinstringliterals	
ID296	stringsandcharacters-extendedgraphemeclusters	
ID297	stringsandcharacters-countingcharacters	
ID298	stringsandcharacters-comparingstrings	
ID299	stringsandcharacters-stringequality	
ID300	stringsandcharacters-prefixandsuffixequality	
ID301	stringsandcharacters-unicoderepresentationsofstrings	
ID302	stringsandcharacters-utf8	
ID303	stringsandcharacters-utf16	
ID304	stringsandcharacters-unicodescalars	
ID305	LanguageGuide/Subscripts	
ID306	subscripts-subscriptsyntax	
ID307	subscripts-subscriptusage	
ID308	subscripts-subscriptoptions	
ID309	LanguageGuide/TheBasics	
ID310	thebasics-constantsandvariables	
ID311	thebasics-declaringconstantsandvariables	
ID312	thebasics-typeannotations	
ID313	thebasics-namingconstantsandvariables	
ID314	thebasics-printingconstantsandvariables	
ID315	thebasics-comments	
ID316	thebasics-semicolons	
ID317	thebasics-integers	
ID318	thebasics-integerbounds	
ID319	thebasics-int	
ID320	thebasics-uint	
ID321	thebasics-floatingpointnumbers	
ID322	thebasics-typesafetyandtypeinference	
ID323	thebasics-numericliterals	
ID324	thebasics-numerictypeconversion	
ID325	thebasics-integerconversion	
ID326	thebasics-integerandfloatingpointconversion	
ID327	thebasics-typealiases	
ID328	thebasics-booleans	
ID329	thebasics-tuples	
ID330	thebasics-optionals	
ID331	thebasics-nil	
ID332	thebasics-ifstatementsandforcedunwrapping	
ID333	thebasics-optionalbinding	
ID334	thebasics-implicitlyunwrappedoptionals	
ID335	thebasics-assertions	
ID336	thebasics-debuggingwithassertions	
ID337	thebasics-whentouseassertions	
ID338	LanguageGuide/TypeCasting	
ID339	typecasting-definingaclasshierarchyfortypecasting	
ID340	typecasting-checkingtype	
ID341	typecasting-downcasting	
ID342	typecasting-typecastingforanyandanyobject	
ID343	typecasting-anyobject	
ID344	typecasting-any	
ID345	ReferenceManual/AboutTheLanguageReference	
ID346	introduction-howtoreadthegrammar	
ID347	ReferenceManual/Attributes	
ID348	attributes-declarationattributes	
ID349	attributes-declarationattributesusedbyinterfacebuilder	
ID350	attributes-typeattributes	
ID351	ReferenceManual/Declarations	
ID352	lexicalstructure-modulescope	
ID353	lexicalstructure-codeblocks	
ID354	declarations-importdeclaration	
ID355	declarations-constantdeclaration	
ID356	declarations-variabledeclaration	
ID357	declarations-storedvariablesandvariablestoredproperties	
ID358	declarations-computedvariablesandcomputedproperties	
ID359	declarations-storedvariableobserversandpropertyobservers	
ID360	declarations-staticvariableproperties	
ID361	declarations-typealiasdeclaration	
ID362	declarations-functiondeclaration	
ID364	declarations-enumerationdeclaration	
ID365	declarations-enumerationswithcasesofanytype	
ID366	declarations-enumerationswithrawcasevalues	
ID367	declarations-structuredeclaration	
ID368	declarations-classdeclaration	
ID369	declarations-protocoldeclaration	
ID370	declarations-protocolpropertydeclaration	
ID371	declarations-protocolmethoddeclaration	
ID372	declarations-protocolinitializerdeclaration	
ID373	declarations-protocolsubscriptdeclaration	
ID374	declarations-protocolassociatedtypedeclaration	
ID375	declarations-initializerdeclaration	
ID376	declarations-failableinitializers	
ID377	declarations-deinitializerdeclaration	
ID378	declarations-extensiondeclaration	
ID379	declarations-subscriptdeclaration	
ID380	declarations-operatordeclaration	
ID381	declarations-declarationmodifiers	
ID382	declarations-accesscontrollevels	
ID383	ReferenceManual/Expressions	
ID384	expressions-prefixexpressions	
ID385	expressions-binaryexpressions	
ID386	expressions-assignmentoperator	
ID387	expressions-ternaryconditionaloperator	
ID388	expressions-type-castingoperators	
ID389	expressions-primaryexpressions	
ID390	expressions-literalexpression	
ID391	expressions-selfexpression	
ID392	expressions-superclassexpression	
ID393	expressions-closureexpression	
ID394	expressions-implicitmemberexpression	
ID395	expressions-parenthesizedexpression	
ID396	expressions-wildcardexpression	
ID397	expressions-postfixexpressions	
ID398	expressions-functioncallexpression	
ID399	expressions-initializerexpression	
ID400	expressions-explicitmemberexpression	
ID401	expressions-postfixselfexpression	
ID402	expressions-dynamictypeexpression	
ID403	expressions-subscriptexpression	
ID404	expressions-forced-valueexpression	
ID405	expression-optionalchainingoperator	
ID406	ReferenceManual/GenericParametersAndArguments	
ID407	genericparametersandarguments-genericparameterclause	
ID408	genericparametersandarguments-whereclauses	
ID409	genericparametersandarguments-genericargumentclause	
ID410	ReferenceManual/LexicalStructure	
ID411	lexicalstructure-whitespaceandcomments	
ID412	lexicalstructure-identifiers	
ID413	lexicalstructure-keywords	
ID414	lexicalstructure-literals	
ID415	lexicalstructure-integerliterals	
ID416	lexicalstructure-floating-pointliterals	
ID417	lexicalstructure-stringliterals	
ID418	lexicalstructure-operators	
ID419	ReferenceManual/Patterns	
ID420	patterns-wildcardpattern	
ID421	patterns-identifierpattern	
ID422	patterns-value-bindingpattern	
ID423	patterns-tuplepattern	
ID424	patterns-enumerationcasepattern	
ID425	patterns-type-castingpatterns	
ID426	patterns-expressionpattern	
ID427	ReferenceManual/ReferenceManualPart	
ID428	ReferenceManual/Statements	
ID429	statements-loopstatements	
ID430	statements-forstatement	
ID431	statements-for-instatement	
ID432	statements-whilestatement	
ID433	statements-do-whilestatement	
ID434	statements-branchstatements	
ID435	statements-ifstatement	
ID436	statements-switchstatement	
ID437	statements-switchstatementsmustbeexhaustive	
ID438	statements-executiondoesnotfallthroughcasesimplicitly	
ID439	statements-labeledstatement	
ID440	statements-controltransferstatements	
ID441	statements-breakstatement	
ID442	statements-continuestatement	
ID443	statements-fallthroughstatement	
ID444	statements-returnstatement	
ID445	ReferenceManual/Types	
ID446	types-typeannotation	
ID447	types-typeidentifier	
ID448	types-tupletype	
ID449	types-functiontype	
ID450	types-arraytype	
ID451	types-dictionarytype	
ID452	types-optionaltype	
ID453	types-implicitlyunwrappedoptionaltype	
ID454	types-protocolcompositiontype	
ID455	types-metatypetype	
ID456	types-typeinheritanceclause	
ID457	types-typeinference	
ID458	ReferenceManual/zzSummaryOfTheGrammar	
ID459	RevisionHistory/RevisionHistory	
ID460	RevisionHistory/RevisionHistoryPart	
ID461	tour-simplevalues	
ID462	tour-controlflow	
ID463	tour-functionsandclosures	
ID464	tour-classes	
ID465	tour-enumsandstructs	
ID466	tour-protocolsandextensions	
ID468	accesscontrol-rawvaluesandassociatedvalues	
ID470	extensions-extensionsyntax	
ID471	declarations-parameternames	
ID472	declarations-specialkindsofparameters	
ID473	declarations-specialkindsofmethods	
ID474	declarations-enumerationcases	
ID475	grammar-summary--Statements	
ID476	grammar-summary--Generic Parameters and Arguments	
ID477	grammar-summary--Declarations	
ID478	grammar-summary--Patterns	
ID479	grammar-summary--Attributes	
ID480	grammar-summary--Expressions	
ID481	grammar-summary--Lexical Structure	
ID482	grammar-summary--Types	
ID483	declarations-typevariableproperties	
ID484	collectiontypes-sets	
ID485	collectiontypes-settypeshorthandsyntax	
ID486	collectiontypes-creatingandinitializingaset	
ID487	collectiontypes-setwitharrayliterals	
ID488	collectiontypes-accessingandmodifyingaset	
ID489	collectiontypes-iteratingoveraset	
ID490	collectiontypes-performingsetoperations	
ID492	collectiontypes-comparingsets	
ID493	collectiontypes-hashvaluesforsettypes	
ID494	stringsandcharacters-accessingandmodifyingastring	
ID495	stringsandcharacters-stringindexes	
ID496	stringsandcharacters-insertingandremoving	
ID499	collectiontypes-constructingsets	
ID500	collectiontypes-creatinganemptyarray	
ID501	collectiontypes-creatinganarraywithadefaultvalue	
ID502	collectiontypes-creatinganarraybyaddingtwoarraystogether	
ID503	collectiontypes-creatingandinitializinganemptyset	
ID504	collectiontypes-creatingasetwithanarrayliteral	
ID505	collectiontypes-fundamentalsetoperations	
ID506	collectiontypes-setmembershipandequality	
ID507	collectiontypes-creatingadictionarywithadictionaryliteral	
ID508	LanguageGuide/ErrorHandling	
ID509	errorhandling-represent	
ID510	errorhandling-throw	
ID511	errorhandling-rethrow	
ID512	errorhandling-catch	
ID513	errorhandling-force	
ID514	errorhandling-defer	
ID515	thebasics-errorhandling	
ID516	expressions-tryexpression	
ID517	expressions-forcedtryexpression	
ID518	statements-throwstatement	
ID519	accesscontrol-accesslevelsfortesttargets	
ID520	patterns-optionalpattern	
ID521	protocols-extensions	
ID522	statements-availabilitycondition	
ID523	controlflow-available	
ID524	statements-guardstatement	
ID525	controlflow-guard	
ID526	functions-omittingparameternames	
ID527	protocols-addingconstraintstoprotocolextensions	
ID528	functions-functionswithmultipleinputparameters	
ID529	protocols-providingdefaultimplementations	
ID530	declarations-throwingfunctionsandmethods	
ID531	declarations-rethrowingfunctionsandmethods	
ID532	statements-deferstatement	
ID533	statements-dostatement	
ID534	stringsandcharacters-stringindices	
ID535	enumerations-implicitlyassignedrawvalues	
ID536	enumerations-recursiveenumerations	
ID537	declarations-enumerationswithindirection	
ID538	statements-compilercontrolstatements	
ID539	statements-buildconfigurationstatement	
ID540	statements-linecontrolstatement	
ID541	errorhandling-docatch	
ID542	errorhandling-optional	
ID543	closures-autoclosures	
ID544	expressions-capturelists	
ID545	declarations-inoutparameters	
ID546	closures-noescape	
ID547	expression-selectorexpression	
ID548	controlflow-compoundcases	
ID549	expression-keypathexpression	
ID550	declarations-precedencegroupdeclaration	
ID551	declarations-functionsthatneverreturn	
ID552	expressions-tupleexpression	
ID553	generics-extensionwithwhereclause	
ID554	thebasics-preconditions	
ID555	stringsandcharacters-substrings	
ID557	generics-associatedtypeswithwhereclause	
ID558	generics-subscripts	
ID559	accesscontrol-privateextension	
ID560	generics-constrainassociatedtype	
ID561	GuidedTour/Compatibility	
ID562	basicoperators-onesidedranges	
ID563	expression-typedkeypathexpression	
ID564	stringsandcharacters-multilineliterals	
ID565	stringsandcharacters-multilineliteralslinebreaks	
ID566	stringsandcharacters-multilineliteralsindentation	
ID567	LanguageGuide/MemorySafety	
ID568	memorysafety-whatisexclusivity	
ID569	memorysafety-inout	
ID570	memorysafety-methods	
ID571	memorysafety-properties	
ID572	types-functionparameterconflicts	
ID573	memory-characteristics	
ID574	protocols-declaringconditionalconformancetoaprotocol	
ID575	generics-recursiveprotocol	
ID576	declarations-conditionalconformance	
ID577	declarations-overrideconformance	
ID578	declarations-noredundantconformance	
ID579	declarations-resolvingexplicitredundancy	
ID580	declarations-explicitconformanceinheritance	
ID581	enumerations-allcases	
ID582	statements-errorwarning	
ID583	attributes-available	
ID584	attributes-discardableresult	
ID585	attributes-dynamicmemberlookup	
ID586	attributes-gkinspectable	
ID587	attributes-inlinable	
ID588	attributes-nonobjc	
ID589	attributes-nsapplicationmain	
ID590	attributes-nscopying	
ID591	attributes-nsmanaged	
ID592	attributes-objc	
ID593	attributes-objcmembers	
ID594	attributes-requires-stored-property-inits	
ID595	attributes-testable	
ID596	attributes-uiapplicationmain	
ID597	attributes-usablefrominline	
ID598	attributes-warn-unqualified-access	
ID599	attributes-autoclosure	
ID600	attributes-convention	
ID601	attributes-escaping	
ID602	statements-switchingoverfutureenumerationcases	
ID603	attributes-dynamiccallable	
ID604	attributes-switchcaseattributes	
ID605	attributes-unknown	
ID606	stringsandcharacters-extendeddelimiters	
ID607	functions-implicitreturns	
ID608	properties-implicitreturn	
ID609	subscripts-typesubscripts	
ID610	types-selftype	
ID611	declarations-typesubscriptdeclaration	
ID612	LanguageGuide/OpaqueTypes	
ID613	opaquetypes-limitsofgenerics	
ID614	opaquetypes-returning	
ID615	opaquetypes-limitsofexistentials	
ID616	types-opaquetype	
ID617	properties-propertywrapper	
ID618	properties-propertywrapperinit	
ID619	properties-projectedvalues	
ID620	attributes-frozen	
ID621	attributes-propertywrapper	
ID622	declarations-specialfuncnames	
ID623	tour-errorhandling	
ID624	tour-generics	
ID625	automaticreferencecounting-unownedoptionalreferences	
ID626	attributes-main	
ID627	protocols-synthesizedimplementation	
ID628	generics-contextualwhereclause	
ID629	types-anytype	
ID630	advancedoperators-resultbuilders	
ID631	expressions-inoutexpression	
ID632	expressions-implicitconversion	
ID633	attributes-resultbuilder	
ID634	attributes-resultbuilder-methods	
ID635	attributes-resultbuilder-transformation	
ID636	attributes-resultbuilder-attribute	
ID637	tour-concurrency	
ID638	LanguageGuide/Concurrency	
ID639	concurrency-asyncfunc	
ID640	concurrency-asyncsequence	
ID641	concurrency-asynclet	
ID642	concurrency-tasks	
ID643	concurrency-taskhandle	
ID644	concurrency-taskcancellation	
ID645	concurrency-actors	
ID646	expressions-awaitexpression	
ID647	declarations-asyncfunctions	
ID648	declarations-actordeclaration	
ID649	concurrency-sendable	
ID650	lexicalstructure-regexliterals	
ID651	attributes-unchecked	
ID652	attributes-sendable	
